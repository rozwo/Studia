#lang racket

;zadanie 5
(define (elem? x xs)
  (cond [(null? xs) #f]
        [(= (car xs) x) #t]
        [else (elem? x (cdr xs))]))

;zadanie 6
(define (maximum xs)
  (define (it xs m)
    (if (null? xs)
        m
        (if (> (car xs) m)
            (it (cdr xs) (car xs))
            (it (cdr xs) m))))
  (it xs -inf.0))

;zadanie 7
(define (suffixes xs)
  (define (my-append xs)
    (if (null? xs)
        (list xs)
        (cons xs
              (my-append (cdr xs)))))
  (my-append xs))